networks:
  akira-net:

services:

  app-api:
    build:
      context: ./app-api
      dockerfile: Dockerfile
    networks: ["akira-net"]
    volumes:
      - ./app-api:/app
      - ./volumes/data:/usr/share/data
      - ./volumes/schemas:/usr/share/schemas:ro
    environment:
      DEBUG: false
      PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
      PROJECT_DOMAIN: ${APP_DOMAIN}
      PROJECT_TITLE: "HelpBot AI"
      PROJECT_DESCRIPTION: ""

      SECRET_KEY: ${SECRET_KEY}
      DATA_DIR: "/usr/share/data"
      SCHEMAS_DIR: "/usr/share/schemas"
      ADMIN_AUTH_API_KEY: "v9d1rfvdmx00sddx"
      OPENAI_API_KEY: "sk-proj-OTVCGTlvFJZ7GwKbeCVzT3BlbkFJ4SwowCGeKYG1DrlebdhJ"

  app-web:
    build:
      context: ./app-web
      dockerfile: Dockerfile
    networks: ["akira-net"]
    volumes:
      - ./app-web:/app
      - ./volumes/templates:/usr/share/templates:ro
    env_file: [".env"]
    environment:
      DEBUG: false
      PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
      PROJECT_DOMAIN: ${APP_DOMAIN}
      PROJECT_TITLE: "HelpBot AI"
      PROJECT_DESCRIPTION: ""
      MONGO_URI: "mongodb://mongo:27017"
      MONGO_DB_NAME: "akira_db"
      LANGUAGES: "en,ja,uk"
      TEMPLATES_DIR: "/usr/share/templates"
      INTERNAL_API_HOST: "http://app-api:8080"
      INTERNAL_API_SCHEMA: "http://app-api:8080/api/v1/openapi.json"
      INTERNAL_API_ACCESS_KEY: "v9d1rfvdmx00sddx"

    depends_on:
      app-api:
        condition: service_started
        required: true
      mongo:
        condition: service_started
        required: true
      redis:
        condition: service_started
        required: true
  mongo:
    networks: ["akira-net"]
    image: mongo:5.0
    container_name: mongo_db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "akira-db-user"
      MONGO_INITDB_ROOT_PASSWORD: "fkujsdhfkjsdfhdksjfsd9405" 
      MONGO_INITDB_DATABASE: "akira_db"
  
  redis:
    image: redis:7.0
    container_name: redis
    networks: ["akira-net"]
    ports:
      - "6379:6379"
    restart: unless-stopped


  nginx:
    image: nginx:latest
    networks: ["akira-net"]
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    volumes:
      - ./volumes/conf/js_http.js:/etc/nginx/js_http.js:ro
      - ./volumes/conf/js_auth.js:/etc/nginx/js_auth.js:ro
      - ./volumes/conf/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./volumes/conf/nginx_proxy.conf:/etc/nginx/nginx_proxy.conf:ro
      - ./volumes/conf/nginx_auth.conf:/etc/nginx/nginx_auth.conf:ro
      - /etc/letsencrypt/ssl-dhparam.pem:/etc/nginx/dhparam.pem:ro
      - ./volumes/conf/.htpasswd:/etc/nginx/.htpasswd:ro
      - ./volumes/users:/etc/nginx/users

      - /etc/letsencrypt/live/${APP_DOMAIN}/fullchain.pem:/etc/certs/cert.pem:ro
      - /etc/letsencrypt/live/${APP_DOMAIN}/privkey.pem:/etc/certs/privkey.pem:ro
      - /etc/letsencrypt/live/${APP_DOMAIN}/fullchain.pem:/etc/certs/chain.pem:ro

      - ./volumes/html:/usr/share/nginx/html
      - ./volumes/data:/usr/share/data
      - ./volumes/logs:/var/log/nginx
      - ./volumes/cache:/var/cache/nginx
    environment:
      PROJECT_NAME: ${COMPOSE_PROJECT_NAME}
      PROJECT_DOMAIN: ${APP_DOMAIN}
      PROJECT_TITLE: "HelpBot AI"
      PROJECT_DESCRIPTION: ""
      ADMIN_EMAILS: "gansikk@gmail.com slawa19@gmail.com"
    depends_on:
      app-api:
        condition: service_started
        required: true
      app-web:
        condition: service_started
        required: true
      mongo:
        condition: service_started
        required: true

